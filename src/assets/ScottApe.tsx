/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef,useEffect } from 'react'
import { useGLTF,useTexture, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Wolf3D_Teeth_Wolf3D_head_custom_mesh003mesh001: THREE.SkinnedMesh
    Wolf3D_Body_Custom001_mesh006: THREE.SkinnedMesh
    Wolf3D_EyeLeft_eye_l_Mesh006mesh: THREE.SkinnedMesh
    Wolf3D_EyeRight_eye_r_Mesh004mesh: THREE.SkinnedMesh
    Wolf3D_Head_Custom_Wolf3D_head_custom_mesh003mesh: THREE.SkinnedMesh
    Wolf3D_Outfit_Bottom_Wolf3D_outfit_bottom_mesh009mesh: THREE.SkinnedMesh
    Wolf3D_Outfit_Footwear_Retopo_Wolf3D_outfit_footwear_me_a330ea9: THREE.SkinnedMesh
    Wolf3D_Outfit_Top_Wolf3D_outfit_top_mesh013mesh: THREE.SkinnedMesh
    mixamorigHips: THREE.Bone
  }
  materials: {}
}

type ActionName = 'Armature|mixamo.com|Layer0'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null!)
  const { nodes, materials, animations } = useGLTF('/glbFiles/ScottApe-transformed.glb') as unknown as GLTFResult
  const { actions } = useAnimations(animations, group)

  const top = useTexture({
    map: 'ApeTextures/Wolf3D_Outfit_top_C.jpg',
    normalMap:  'ApeTextures/Wolf3D_Outfit_top_N.jpg',
    // roughnessMap:  'ApeTextures/Wolf3D_Outfit_top_R.jpg',

  })

  const body = useTexture({
    map: 'ApeTextures/Wolf3D_Body_C.jpg',
    normalMap:  'ApeTextures/Wolf3D_Body_N.jpg',
    // roughnessMap:  'ApeTextures/Wolf3D_Body_custom_R.jpg',

  })

  const head = useTexture({
    map: 'ApeTextures/Wolf3D_Head_Custom_C.jpg',
    normalMap:  'ApeTextures/Wolf3D_Head_Custom_N.jpg',
    // roughnessMap:  'ApeTextures/Wolf3D_Head_Custom_R.jpg',

  })

  const footwear = useTexture({
    map: 'ApeTextures/Wolf3D_Outfit_Footwear_C.jpg',
    normalMap:  'ApeTextures/Wolf3D_Outfit_Footwear_N.jpg',
    // roughnessMap:  'ApeTextures/Wolf3D_Outfit_Footwear_R.jpg',

  })

  const bottom = useTexture({
    map:  'ApeTextures/Wolf3D_Outfit_Bottom_C.jpg',
    normalMap:  'ApeTextures/Wolf3D_Outfit_Bottom_N.jpg',
    // roughnessMap:  'ApeTextures/Wolf3D_Outfit_Bottom_R.jpg',

  })


     // {/* After DOM updates this is called ==================================== */}
     useEffect(() =>
     {
       actions['Armature|mixamo.com|Layer0']?.play()


     }, [] )



  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Wolf3D_Teeth_Wolf3D_head_custom_mesh003mesh001" geometry={nodes.Wolf3D_Teeth_Wolf3D_head_custom_mesh003mesh001.geometry} material={nodes.Wolf3D_Teeth_Wolf3D_head_custom_mesh003mesh001.material} skeleton={nodes.Wolf3D_Teeth_Wolf3D_head_custom_mesh003mesh001.skeleton}>
          <meshLambertMaterial {...head}  map-flipY={false} />
            </skinnedMesh>
          <skinnedMesh name="Wolf3D_Body_Custom001_mesh006" geometry={nodes.Wolf3D_Body_Custom001_mesh006.geometry} material={nodes.Wolf3D_Body_Custom001_mesh006.material} skeleton={nodes.Wolf3D_Body_Custom001_mesh006.skeleton} >
          <meshLambertMaterial {...body}  map-flipY={false} />
          </skinnedMesh>
          <skinnedMesh name="Wolf3D_EyeLeft_eye_l_Mesh006mesh" geometry={nodes.Wolf3D_EyeLeft_eye_l_Mesh006mesh.geometry} material={nodes.Wolf3D_EyeLeft_eye_l_Mesh006mesh.material} skeleton={nodes.Wolf3D_EyeLeft_eye_l_Mesh006mesh.skeleton}>

          {/* <meshLambertMaterial {...props3}  map-flipY={false} /> */}

           </skinnedMesh>          
          <skinnedMesh name="Wolf3D_EyeRight_eye_r_Mesh004mesh" geometry={nodes.Wolf3D_EyeRight_eye_r_Mesh004mesh.geometry} material={nodes.Wolf3D_EyeRight_eye_r_Mesh004mesh.material} skeleton={nodes.Wolf3D_EyeRight_eye_r_Mesh004mesh.skeleton} >
          {/* <meshLambertMaterial {...props3}  map-flipY={false} /> */}
          </skinnedMesh>
          <skinnedMesh name="Wolf3D_Head_Custom_Wolf3D_head_custom_mesh003mesh" geometry={nodes.Wolf3D_Head_Custom_Wolf3D_head_custom_mesh003mesh.geometry} material={nodes.Wolf3D_Head_Custom_Wolf3D_head_custom_mesh003mesh.material} skeleton={nodes.Wolf3D_Head_Custom_Wolf3D_head_custom_mesh003mesh.skeleton} >
          <meshLambertMaterial {...head}  map-flipY={false} />
          </skinnedMesh>
          <skinnedMesh name="Wolf3D_Outfit_Bottom_Wolf3D_outfit_bottom_mesh009mesh" geometry={nodes.Wolf3D_Outfit_Bottom_Wolf3D_outfit_bottom_mesh009mesh.geometry} material={nodes.Wolf3D_Outfit_Bottom_Wolf3D_outfit_bottom_mesh009mesh.material} skeleton={nodes.Wolf3D_Outfit_Bottom_Wolf3D_outfit_bottom_mesh009mesh.skeleton} >
          <meshLambertMaterial {...bottom}  map-flipY={false} />
          </skinnedMesh>
          <skinnedMesh name="Wolf3D_Outfit_Footwear_Retopo_Wolf3D_outfit_footwear_me_a330ea9" geometry={nodes.Wolf3D_Outfit_Footwear_Retopo_Wolf3D_outfit_footwear_me_a330ea9.geometry} material={nodes.Wolf3D_Outfit_Footwear_Retopo_Wolf3D_outfit_footwear_me_a330ea9.material} skeleton={nodes.Wolf3D_Outfit_Footwear_Retopo_Wolf3D_outfit_footwear_me_a330ea9.skeleton} >
          <meshLambertMaterial {...footwear}  map-flipY={false} />
          </skinnedMesh>
          <skinnedMesh name="Wolf3D_Outfit_Top_Wolf3D_outfit_top_mesh013mesh" geometry={nodes.Wolf3D_Outfit_Top_Wolf3D_outfit_top_mesh013mesh.geometry} material={nodes.Wolf3D_Outfit_Top_Wolf3D_outfit_top_mesh013mesh.material} skeleton={nodes.Wolf3D_Outfit_Top_Wolf3D_outfit_top_mesh013mesh.skeleton} >
          <meshLambertMaterial {...top}  map-flipY={false} />
          </skinnedMesh>
        </group>
      </group>
    </group>
  )}
useGLTF.preload('/glbFiles/ScottApe-transformed.glb')

