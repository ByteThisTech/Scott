/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Wolf3D_Body_Custom: THREE.Mesh
    Wolf3D_EyeLeft: THREE.Mesh
    Wolf3D_EyeRight: THREE.Mesh
    Wolf3D_Head_Custom: THREE.Mesh
    Wolf3D_Outfit_Bottom: THREE.Mesh
    Wolf3D_Outfit_Footwear: THREE.Mesh
    Wolf3D_Outfit_Top: THREE.Mesh
    Wolf3D_Teeth: THREE.Mesh
  }
  materials: {}
}

export function Ape_NoAnimation(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/public/glbFiles/BoredApe_NoAnimations.glb') as unknown as GLTFResult
  // const texture = useTexture("/Wolf3D_outfit_top_C.jpg")
  // const [colorMap, normalMap, roughnessMap] = useTexture([
  //   'Wolf3D_outfit_top_C.jpg',
  //   'Wolf3D_outfit_top_N.jpg',
  //   'Wolf3D_outfit_top_R.jpg',
  // ])

  const props2 = useTexture({
    map: 'ApeTextures/Wolf3D_outfit_top_C.jpg',
    normalMap:  'ApeTextures/Wolf3D_outfit_top_N.jpg',
    roughnessMap:  'ApeTextures/Wolf3D_outfit_top_R.jpg',

  })

  const props3 = useTexture({
    map: 'ApeTextures/Wolf3D_body_custom_C.jpg',
    normalMap:  'ApeTextures/Wolf3D_body_custom_N.jpg',
    roughnessMap:  'ApeTextures/Wolf3D_body_custom_R.jpg',

  })

  const head = useTexture({
    map: 'ApeTextures/Wolf3D_Head_Custom_C.jpg',
    normalMap:  'ApeTextures/Wolf3D_Head_Custom_N.jpg',
    roughnessMap:  'ApeTextures/Wolf3D_Head_Custom_R.jpg',

  })

  const footwear = useTexture({
    map: 'ApeTextures/Wolf3D_Outfit_Footwear_C.jpg',
    normalMap:  'ApeTextures/Wolf3D_Outfit_Footwear_N.jpg',
    roughnessMap:  'ApeTextures/Wolf3D_Outfit_Footwear_R.jpg',

  })

  const bottom = useTexture({
    map:  'ApeTextures/Wolf3D_Outfit_Bottom_C.jpg',
    normalMap:  'ApeTextures/Wolf3D_Outfit_Bottom_N.jpg',
    roughnessMap:  'ApeTextures/Wolf3D_Outfit_Bottom_R.jpg',

  })

  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <group position={[0, 0, -1.02]} rotation={[-Math.PI / 2, 0, 0]}>
          <group position={[0, 0.12, -0.01]} rotation={[-0.09, 0, 0]}>
            <group position={[0, 0.14, 0]}>
              <group position={[0, 0.16, 0]}>
                <group position={[0, 0.18, 0]} rotation={[0.09, 0, 0]}>
                  <group position={[0, 0.1, 0.02]} />
                </group>
                <group position={[0.07, 0.15, 0]} rotation={[1.55, -0.4, -1.62]}>
                  <group position={[0, 0.14, 0]} rotation={[-0.44, -0.1, -0.05]}>
                    <group position={[0, 0.33, 0]} rotation={[0.06, 0.01, 0.12]}>
                      <group position={[0, 0.37, 0]} rotation={[-0.06, 0.2, -0.14]}>
                        <group position={[-0.04, 0.03, 0.02]} rotation={[0.37, 0.27, 0.6]}>
                          <group position={[-0.01, 0.04, 0]} rotation={[0.13, 0, 0]}>
                            <group position={[0, 0.05, 0]} rotation={[-0.07, 0, 0]} />
                          </group>
                        </group>
                        <group position={[-0.06, 0.12, 0]} rotation={[0.05, 0.01, 0.14]}>
                          <group position={[0, 0.05, 0]} rotation={[-0.01, 0, 0]}>
                            <group position={[0, 0.05, 0]} rotation={[0.1, 0, 0]} />
                          </group>
                        </group>
                        <group position={[-0.02, 0.13, 0]} rotation={[0.04, 0, 0.11]}>
                          <group position={[0, 0.06, 0]} rotation={[0.06, 0, 0]}>
                            <group position={[0, 0.05, 0]} rotation={[-0.01, 0, 0]} />
                          </group>
                        </group>
                        <group position={[0.02, 0.12, 0]} rotation={[0, 0, 0.13]}>
                          <group position={[0, 0.05, 0]} rotation={[0.04, 0, 0]}>
                            <group position={[0, 0.05, 0]} rotation={[0.16, 0, 0]} />
                          </group>
                        </group>
                        <group position={[0.06, 0.12, 0]} rotation={[-0.01, 0, 0.2]}>
                          <group position={[0, 0.04, 0]} rotation={[0.05, 0, 0]}>
                            <group position={[0, 0.03, 0]} rotation={[0.03, 0, 0]} />
                          </group>
                        </group>
                      </group>
                    </group>
                  </group>
                </group>
                <group position={[-0.07, 0.15, 0]} rotation={[1.55, 0.4, 1.61]}>
                  <group position={[0, 0.14, 0]} rotation={[-0.44, 0.11, 0.05]}>
                    <group position={[0, 0.33, 0]} rotation={[0.06, -0.01, -0.12]}>
                      <group position={[0, 0.37, 0]} rotation={[-0.06, -0.2, 0.15]}>
                        <group position={[0.04, 0.03, 0.02]} rotation={[0.37, -0.27, -0.61]}>
                          <group position={[0.01, 0.04, 0]} rotation={[0.13, 0, 0]}>
                            <group position={[0, 0.05, 0]} rotation={[-0.09, 0, 0]} />
                          </group>
                        </group>
                        <group position={[0.06, 0.13, 0]} rotation={[0.04, 0, -0.1]}>
                          <group position={[0, 0.05, 0]} rotation={[0.02, 0, 0]}>
                            <group position={[0, 0.04, 0]} rotation={[0.01, 0, 0]} />
                          </group>
                        </group>
                        <group position={[0.02, 0.13, 0]} rotation={[0.06, 0, -0.08]}>
                          <group position={[0, 0.06, 0]} rotation={[0.03, 0, 0]}>
                            <group position={[0, 0.05, 0]} rotation={[0.08, 0, 0]} />
                          </group>
                        </group>
                        <group position={[-0.02, 0.13, 0]} rotation={[0.03, -0.01, -0.15]}>
                          <group position={[0, 0.05, 0]} rotation={[-0.02, 0, 0]}>
                            <group position={[0, 0.05, 0]} rotation={[0.26, 0, 0]} />
                          </group>
                        </group>
                        <group position={[-0.06, 0.12, 0]} rotation={[-0.04, 0.01, -0.21]}>
                          <group position={[0, 0.04, 0]} rotation={[0.06, 0, 0]}>
                            <group position={[0, 0.03, 0]} rotation={[0.18, 0, 0]} />
                          </group>
                        </group>
                      </group>
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
          <group position={[0.1, -0.07, 0]} rotation={[0.04, 0, -3.08]}>
            <group position={[0, 0.43, 0]} rotation={[0.02, 0, -0.1]}>
              <group position={[0, 0.39, 0]} rotation={[1, -0.07, 0.11]}>
                <group position={[0, 0.23, 0]} rotation={[0.6, -0.03, 0.02]} />
              </group>
            </group>
          </group>
          <group position={[-0.1, -0.07, 0]} rotation={[0.05, 0, 3.08]}>
            <group position={[0, 0.43, 0]} rotation={[0.04, 0, 0.1]}>
              <group position={[0, 0.39, 0]} rotation={[0.98, 0.07, -0.11]}>
                <group position={[0, 0.23, 0]} rotation={[0.6, 0.03, -0.02]} />
              </group>
            </group>
          </group>
        </group>
        <mesh castShadow receiveShadow geometry={nodes.Wolf3D_Body_Custom.geometry} >
           <meshLambertMaterial {...props3}  map-flipY={false} />
        </mesh>
        <mesh geometry={nodes.Wolf3D_EyeLeft.geometry} material={nodes.Wolf3D_EyeLeft.material} />
        <mesh geometry={nodes.Wolf3D_EyeRight.geometry} material={nodes.Wolf3D_EyeRight.material} />
        <mesh castShadow receiveShadow geometry={nodes.Wolf3D_Head_Custom.geometry} >
        <meshLambertMaterial {...head}  map-flipY={false} />
        </mesh>
        <mesh castShadow receiveShadow geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={nodes.Wolf3D_Outfit_Bottom.material} >
        <meshLambertMaterial {...bottom}  map-flipY={false} />
        </mesh>
        <mesh castShadow receiveShadow geometry={nodes.Wolf3D_Outfit_Footwear.geometry}  >
        <meshLambertMaterial {...footwear}  map-flipY={false} />
        </mesh>
        <mesh castShadow receiveShadow geometry={nodes.Wolf3D_Outfit_Top.geometry}  >
        <meshLambertMaterial {...props2}  map-flipY={false} />
        </mesh>

        <mesh geometry={nodes.Wolf3D_Teeth.geometry} material={nodes.Wolf3D_Teeth.material} />
      </group>
    </group>
  )
}

useGLTF.preload('/glbFiles/BoredApe_NoAnimations.glb')
