/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Ch36: THREE.SkinnedMesh
    mixamorig1Hips: THREE.Bone
  }
  materials: {
    Ch36_Body: THREE.MeshStandardMaterial
  }
}

type ActionName = 'Armature|mixamo.com|Layer0'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<any>(null!)
  const { nodes, materials, animations } = useGLTF('/glbFiles/walking-transformed.glb') as unknown as GLTFResult
  const { actions } = useAnimations(animations, group)

    // {/* After DOM updates this is called ==================================== */}
    useEffect(() =>
    {
      actions['Armature|mixamo.com|Layer0']?.play()
    }, [] )


  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorig1Hips} />
          <skinnedMesh name="Ch36" geometry={nodes.Ch36.geometry} material={materials.Ch36_Body} skeleton={nodes.Ch36.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/glbFiles/walking-transformed.glb')
